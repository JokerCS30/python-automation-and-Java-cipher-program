/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package shiftingandconverting;
import java.io.*;
import javax.swing.*;
import java.awt.*;


/**
 *
 * @author Jamie
 */
public class CeasarFrame extends javax.swing.JFrame {

    /**
     * Creates new form CeasarFrame
     */
    public CeasarFrame() {
        initComponents();
        this.setSize(950,600);
        this.setLocation(200,100);
    }
    
    Ceasar c = new Ceasar();
    
    File file;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        FileChooser = new javax.swing.JFileChooser();
        msgMessage = new javax.swing.JOptionPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtInput = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtOutput = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        txtRotation = new javax.swing.JTextField();
        btnRotate = new javax.swing.JButton();
        btnAll = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtWord = new javax.swing.JTextField();
        btnReverse = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        mnuOpen = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        mnuConversions = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        txtInput.setColumns(20);
        txtInput.setLineWrap(true);
        txtInput.setRows(5);
        jScrollPane1.setViewportView(txtInput);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(30, 30, 320, 440);

        txtOutput.setColumns(20);
        txtOutput.setLineWrap(true);
        txtOutput.setRows(5);
        jScrollPane2.setViewportView(txtOutput);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(510, 30, 350, 440);

        jLabel1.setText("Rotation No.");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(390, 60, 100, 14);
        getContentPane().add(txtRotation);
        txtRotation.setBounds(380, 90, 100, 20);

        btnRotate.setText("Rotate");
        btnRotate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRotateActionPerformed(evt);
            }
        });
        getContentPane().add(btnRotate);
        btnRotate.setBounds(370, 130, 120, 23);

        btnAll.setText("Rotate all shifts");
        btnAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAllActionPerformed(evt);
            }
        });
        getContentPane().add(btnAll);
        btnAll.setBounds(370, 290, 130, 70);

        btnClear.setText("clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });
        getContentPane().add(btnClear);
        btnClear.setBounds(370, 380, 130, 70);

        jLabel2.setText("rotation word");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(390, 170, 110, 14);
        getContentPane().add(txtWord);
        txtWord.setBounds(370, 200, 120, 20);

        btnReverse.setText("Reverse word");
        btnReverse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReverseActionPerformed(evt);
            }
        });
        getContentPane().add(btnReverse);
        btnReverse.setBounds(370, 230, 120, 23);

        jMenu1.setText("File");

        mnuOpen.setText("Open");
        mnuOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuOpenActionPerformed(evt);
            }
        });
        jMenu1.add(mnuOpen);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        mnuConversions.setText("Conversions");
        mnuConversions.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mnuConversionsMouseClicked(evt);
            }
        });
        mnuConversions.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuConversionsActionPerformed(evt);
            }
        });
        jMenuBar1.add(mnuConversions);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mnuConversionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuConversionsActionPerformed
        
    }//GEN-LAST:event_mnuConversionsActionPerformed

    private void mnuConversionsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mnuConversionsMouseClicked
        ConversionFrame f = new ConversionFrame();
        f.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_mnuConversionsMouseClicked

    private void mnuOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuOpenActionPerformed
        int val = FileChooser.showOpenDialog(this);
        
        if(val == JFileChooser.APPROVE_OPTION){
            file = FileChooser.getSelectedFile();
        }
        else{
            System.out.println("error open file not working");
        }
        
        int c;
        InputStream in = null;
        try{
            in = new FileInputStream(file.getPath());
            while((c = in.read()) != -1){
                txtInput.setText(txtInput.getText() + String.valueOf((char)c));           // this should add every char from the file into the txtOutput box
            }
        }
        catch(IOException ioe){
            msgMessage.showMessageDialog(this, ioe.toString(), "Exception!", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_mnuOpenActionPerformed

    private void btnRotateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRotateActionPerformed
        int rotateNum = 0;                                                      // this variable is for a number in the rotation num txtbox  
        
        if(!(txtRotation.getText().isEmpty())){                                 // if the rotationnum txtbox isn't empty
            try{
                rotateNum = Integer.parseInt(txtRotation.getText());
                txtOutput.setText(c.rotateSingle(rotateNum, txtInput.getText()));     // use the method to take the rotation num and the string then shift string set number
            }
            catch(Exception e){
                msgMessage.showMessageDialog(this, e.toString(), "Exception!", JOptionPane.ERROR_MESSAGE);
            }
        }
        else if(!(txtWord.getText().isEmpty())){
            try{
                String wordInput = txtWord.getText();
                String textInput = txtInput.getText();
                txtOutput.setText(c.rotateWord(wordInput, textInput));          // works completely w/ spaces
            }
            catch(Exception e){
                msgMessage.showMessageDialog(this, "txtWord" + e.toString(), "Exception!", JOptionPane.ERROR_MESSAGE);
            }
        }
        else{
            msgMessage.showMessageDialog(this, "no rotation pattern given", "Error", JOptionPane.INFORMATION_MESSAGE);
        }
        
        
    }//GEN-LAST:event_btnRotateActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        txtInput.setText("");
        txtOutput.setText("");
        txtRotation.setText("");
        txtWord.setText("");
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAllActionPerformed
        for(int i = 0; i < 26; i++){
            txtOutput.setText(txtOutput.getText()  + (i + ".  " + (c.rotateSingle(i, txtInput.getText()))) + "\n\n");
        }
    }//GEN-LAST:event_btnAllActionPerformed

    private void btnReverseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReverseActionPerformed
        String word = "";
        String reversedWord = "";
        
        if(!(txtWord.getText().isEmpty())){
            try{
                word = txtWord.getText();                       
                txtWord.setText(c.reverseWord(word));           // set the rotate word textbox to now contain the opposite of word
            }
            catch(Exception e){
                msgMessage.showMessageDialog(this, e.toString(), "error", JOptionPane.ERROR_MESSAGE);        
            }
        }
        
        
    }//GEN-LAST:event_btnReverseActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CeasarFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CeasarFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CeasarFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CeasarFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CeasarFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFileChooser FileChooser;
    private javax.swing.JButton btnAll;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnReverse;
    private javax.swing.JButton btnRotate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JMenu mnuConversions;
    private javax.swing.JMenuItem mnuOpen;
    private javax.swing.JOptionPane msgMessage;
    private javax.swing.JTextArea txtInput;
    private javax.swing.JTextArea txtOutput;
    private javax.swing.JTextField txtRotation;
    private javax.swing.JTextField txtWord;
    // End of variables declaration//GEN-END:variables
}
