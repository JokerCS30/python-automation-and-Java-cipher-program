/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package shiftingandconverting;
import java.io.*;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
/**
 *
 * @author Jamie
 */
public class ConversionFrame extends javax.swing.JFrame {

    /**
     * Creates new form Frame
     */
    public ConversionFrame() {
        initComponents();
        this.setSize(1500,800);
        this.setLocation(200,100);
    }
    
    File file;          // class scope
    
    conversions c = new conversions();
    Ceasar ceasar = new Ceasar();
    
    String str = "";
    String str2 = "";
    String input = "";
  
    public void clear(){
        String str = "";
        String str2 = "";
        String input = "";
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        FileChooser = new javax.swing.JFileChooser();
        msgMessage = new javax.swing.JOptionPane();
        btnGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtInput = new javax.swing.JTextArea();
        btnDecToHex = new javax.swing.JButton();
        btnHexToBin = new javax.swing.JButton();
        btnBinToHex = new javax.swing.JButton();
        btnBinToDec = new javax.swing.JButton();
        btnDecToBin = new javax.swing.JButton();
        btnHexToDec = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtOutput = new javax.swing.JTextArea();
        btnAscii = new javax.swing.JButton();
        btnBinaryToLetters = new javax.swing.JButton();
        btnLettersToDecimals = new javax.swing.JButton();
        btnDecToLetters = new javax.swing.JButton();
        btnHexToLetters = new javax.swing.JButton();
        btnLettersToBinary = new javax.swing.JButton();
        btnLettersToHex = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtFinalOutput = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        txtRotation = new javax.swing.JTextField();
        btnRotate = new javax.swing.JButton();
        btnAll = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtWord = new javax.swing.JTextField();
        btnReverse = new javax.swing.JButton();
        txtOutputToInput = new javax.swing.JButton();
        txtInputToOutput = new javax.swing.JButton();
        txtInputToFinalOutput = new javax.swing.JButton();
        txtOutputToFinalOutput = new javax.swing.JButton();
        txtFinalOutputToOutput = new javax.swing.JButton();
        txtFinalOutputToInput = new javax.swing.JButton();
        btnScramble = new javax.swing.JButton();
        btnDictionaryCheck = new javax.swing.JButton();
        btnClear1 = new javax.swing.JButton();
        btnClear2 = new javax.swing.JButton();
        btnClear3 = new javax.swing.JButton();
        btnCount = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtCount = new javax.swing.JTextArea();
        rbDecimal = new javax.swing.JRadioButton();
        rbDecimalTwo = new javax.swing.JRadioButton();
        rbHex = new javax.swing.JRadioButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        btnConvert = new javax.swing.JButton();
        Menu = new javax.swing.JMenuBar();
        mnuFile = new javax.swing.JMenu();
        mnuOpen = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        mnuShifts = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        txtInput.setColumns(20);
        txtInput.setLineWrap(true);
        txtInput.setRows(5);
        txtInput.setAutoscrolls(false);
        jScrollPane1.setViewportView(txtInput);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(20, 40, 310, 500);

        btnDecToHex.setText("Decimal to Hex");
        btnDecToHex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDecToHexActionPerformed(evt);
            }
        });
        getContentPane().add(btnDecToHex);
        btnDecToHex.setBounds(350, 50, 150, 30);

        btnHexToBin.setText("Hex to Binary");
        btnHexToBin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHexToBinActionPerformed(evt);
            }
        });
        getContentPane().add(btnHexToBin);
        btnHexToBin.setBounds(350, 320, 150, 30);

        btnBinToHex.setText("Binary to Hex");
        btnBinToHex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBinToHexActionPerformed(evt);
            }
        });
        getContentPane().add(btnBinToHex);
        btnBinToHex.setBounds(350, 200, 150, 30);

        btnBinToDec.setText("Binary to Decimal");
        btnBinToDec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBinToDecActionPerformed(evt);
            }
        });
        getContentPane().add(btnBinToDec);
        btnBinToDec.setBounds(350, 170, 150, 30);

        btnDecToBin.setText("Decimal to Binary");
        btnDecToBin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDecToBinActionPerformed(evt);
            }
        });
        getContentPane().add(btnDecToBin);
        btnDecToBin.setBounds(350, 80, 150, 30);

        btnHexToDec.setText("Hex to Decimal");
        btnHexToDec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHexToDecActionPerformed(evt);
            }
        });
        getContentPane().add(btnHexToDec);
        btnHexToDec.setBounds(350, 290, 150, 30);

        txtOutput.setColumns(20);
        txtOutput.setLineWrap(true);
        txtOutput.setRows(5);
        jScrollPane2.setViewportView(txtOutput);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(530, 40, 330, 500);

        btnAscii.setText("Hex to Ascii");
        btnAscii.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAsciiActionPerformed(evt);
            }
        });
        getContentPane().add(btnAscii);
        btnAscii.setBounds(350, 350, 150, 30);

        btnBinaryToLetters.setText("Binary to Letters");
        btnBinaryToLetters.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBinaryToLettersActionPerformed(evt);
            }
        });
        getContentPane().add(btnBinaryToLetters);
        btnBinaryToLetters.setBounds(350, 230, 150, 30);

        btnLettersToDecimals.setText("Letters to Decimals");
        btnLettersToDecimals.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLettersToDecimalsActionPerformed(evt);
            }
        });
        getContentPane().add(btnLettersToDecimals);
        btnLettersToDecimals.setBounds(350, 450, 150, 30);

        btnDecToLetters.setText("Decimal to Letters");
        btnDecToLetters.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDecToLettersActionPerformed(evt);
            }
        });
        getContentPane().add(btnDecToLetters);
        btnDecToLetters.setBounds(350, 110, 150, 30);

        btnHexToLetters.setText("Hex to Letters");
        btnHexToLetters.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHexToLettersActionPerformed(evt);
            }
        });
        getContentPane().add(btnHexToLetters);
        btnHexToLetters.setBounds(350, 380, 150, 30);

        btnLettersToBinary.setText("Letters to Binary");
        btnLettersToBinary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLettersToBinaryActionPerformed(evt);
            }
        });
        getContentPane().add(btnLettersToBinary);
        btnLettersToBinary.setBounds(350, 480, 150, 30);

        btnLettersToHex.setText("Letters to Hex");
        btnLettersToHex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLettersToHexActionPerformed(evt);
            }
        });
        getContentPane().add(btnLettersToHex);
        btnLettersToHex.setBounds(350, 510, 150, 30);

        txtFinalOutput.setColumns(20);
        txtFinalOutput.setLineWrap(true);
        txtFinalOutput.setRows(5);
        jScrollPane3.setViewportView(txtFinalOutput);

        getContentPane().add(jScrollPane3);
        jScrollPane3.setBounds(1050, 40, 340, 500);

        jLabel1.setText("Rotation No.");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(910, 100, 100, 14);
        getContentPane().add(txtRotation);
        txtRotation.setBounds(900, 130, 100, 20);

        btnRotate.setText("Rotate");
        btnRotate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRotateActionPerformed(evt);
            }
        });
        getContentPane().add(btnRotate);
        btnRotate.setBounds(890, 170, 120, 23);

        btnAll.setText("Rotate all shifts");
        btnAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAllActionPerformed(evt);
            }
        });
        getContentPane().add(btnAll);
        btnAll.setBounds(890, 330, 130, 70);

        btnClear.setText("clear all");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });
        getContentPane().add(btnClear);
        btnClear.setBounds(630, 640, 130, 70);

        jLabel2.setText("rotation word");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(910, 210, 110, 14);
        getContentPane().add(txtWord);
        txtWord.setBounds(890, 240, 120, 20);

        btnReverse.setText("Reverse word");
        btnReverse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReverseActionPerformed(evt);
            }
        });
        getContentPane().add(btnReverse);
        btnReverse.setBounds(890, 270, 120, 23);

        txtOutputToInput.setText("<");
        txtOutputToInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtOutputToInputActionPerformed(evt);
            }
        });
        getContentPane().add(txtOutputToInput);
        txtOutputToInput.setBounds(530, 550, 170, 50);

        txtInputToOutput.setText(">");
        txtInputToOutput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtInputToOutputActionPerformed(evt);
            }
        });
        getContentPane().add(txtInputToOutput);
        txtInputToOutput.setBounds(170, 550, 160, 50);

        txtInputToFinalOutput.setText(">>");
        txtInputToFinalOutput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtInputToFinalOutputActionPerformed(evt);
            }
        });
        getContentPane().add(txtInputToFinalOutput);
        txtInputToFinalOutput.setBounds(20, 550, 150, 50);

        txtOutputToFinalOutput.setText(">");
        txtOutputToFinalOutput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtOutputToFinalOutputActionPerformed(evt);
            }
        });
        getContentPane().add(txtOutputToFinalOutput);
        txtOutputToFinalOutput.setBounds(700, 550, 160, 50);

        txtFinalOutputToOutput.setText("<");
        txtFinalOutputToOutput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFinalOutputToOutputActionPerformed(evt);
            }
        });
        getContentPane().add(txtFinalOutputToOutput);
        txtFinalOutputToOutput.setBounds(1050, 550, 180, 50);

        txtFinalOutputToInput.setText("<<");
        txtFinalOutputToInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFinalOutputToInputActionPerformed(evt);
            }
        });
        getContentPane().add(txtFinalOutputToInput);
        txtFinalOutputToInput.setBounds(1230, 550, 160, 50);

        btnScramble.setText("scramble word");
        btnScramble.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnScrambleActionPerformed(evt);
            }
        });
        getContentPane().add(btnScramble);
        btnScramble.setBounds(890, 420, 130, 40);

        btnDictionaryCheck.setText("check dictionary");
        btnDictionaryCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDictionaryCheckActionPerformed(evt);
            }
        });
        getContentPane().add(btnDictionaryCheck);
        btnDictionaryCheck.setBounds(890, 480, 130, 40);

        btnClear1.setText("clear");
        btnClear1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClear1ActionPerformed(evt);
            }
        });
        getContentPane().add(btnClear1);
        btnClear1.setBounds(70, 10, 220, 23);

        btnClear2.setText("clear");
        btnClear2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClear2ActionPerformed(evt);
            }
        });
        getContentPane().add(btnClear2);
        btnClear2.setBounds(570, 10, 230, 23);

        btnClear3.setText("clear");
        btnClear3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClear3ActionPerformed(evt);
            }
        });
        getContentPane().add(btnClear3);
        btnClear3.setBounds(1070, 10, 300, 23);

        btnCount.setText("Word & Letter counts");
        btnCount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCountActionPerformed(evt);
            }
        });
        getContentPane().add(btnCount);
        btnCount.setBounds(20, 620, 180, 60);

        txtCount.setEditable(false);
        txtCount.setColumns(20);
        txtCount.setLineWrap(true);
        txtCount.setRows(3);
        txtCount.setAutoscrolls(false);
        jScrollPane4.setViewportView(txtCount);

        getContentPane().add(jScrollPane4);
        jScrollPane4.setBounds(220, 620, 160, 60);

        btnGroup1.add(rbDecimal);
        rbDecimal.setText("Decimal");
        getContentPane().add(rbDecimal);
        rbDecimal.setBounds(840, 640, 110, 30);

        buttonGroup2.add(rbDecimalTwo);
        rbDecimalTwo.setText("Decimal");
        getContentPane().add(rbDecimalTwo);
        rbDecimalTwo.setBounds(1130, 640, 140, 30);

        btnGroup1.add(rbHex);
        rbHex.setText("Hex");
        getContentPane().add(rbHex);
        rbHex.setBounds(840, 680, 90, 30);

        buttonGroup2.add(jRadioButton4);
        jRadioButton4.setText("Hex");
        getContentPane().add(jRadioButton4);
        jRadioButton4.setBounds(1130, 680, 140, 30);

        btnConvert.setText("convert");
        btnConvert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConvertActionPerformed(evt);
            }
        });
        getContentPane().add(btnConvert);
        btnConvert.setBounds(970, 660, 69, 23);

        mnuFile.setText("File");

        mnuOpen.setText("Open");
        mnuOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuOpenActionPerformed(evt);
            }
        });
        mnuFile.add(mnuOpen);

        Menu.add(mnuFile);

        jMenu2.setText("Edit");
        Menu.add(jMenu2);

        mnuShifts.setText("Shifts");

        jMenuItem1.setText("jMenuItem1");
        mnuShifts.add(jMenuItem1);

        Menu.add(mnuShifts);

        setJMenuBar(Menu);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mnuOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuOpenActionPerformed
        int val = FileChooser.showOpenDialog(this);
        try{
            if(val == JFileChooser.APPROVE_OPTION){
                file = FileChooser.getSelectedFile();
            }
            else{
                msgMessage.showMessageDialog(this, "No file chosen", "Error", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch(Exception e){
            msgMessage.showMessageDialog(this, "No file chosen", "Error", JOptionPane.INFORMATION_MESSAGE);
        }
        
        int c;
        InputStream in = null;
        try{
            in = new FileInputStream(file.getPath());
            while((c = in.read()) != -1){
                txtInput.setText(txtInput.getText() + String.valueOf((char)c));           // this should add every char from the file into the txtOutput box
            }
        }
        catch(IOException ioe){
            msgMessage.showMessageDialog(this, ioe.toString(), "Exception!", JOptionPane.ERROR_MESSAGE);
        }
        
        
    }//GEN-LAST:event_mnuOpenActionPerformed

    private void btnDecToHexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDecToHexActionPerformed
        clear();
        
        try{
            input = txtInput.getText();
            txtOutput.setText(c.decToHex(input)); 
        }
        catch(Exception e){
            msgMessage.showMessageDialog(this, e.toString(), "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnDecToHexActionPerformed

    private void btnHexToDecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHexToDecActionPerformed
        clear();
        
        try{
            input = txtInput.getText();
            str = input.toUpperCase();       
            txtOutput.setText(c.hexToDec(str));
        }
        catch(Exception e){
            msgMessage.showMessageDialog(this, e.toString(), "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnHexToDecActionPerformed

    private void btnDecToBinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDecToBinActionPerformed
        clear();
        
        try{
            input = txtInput.getText();
            txtOutput.setText(c.decToBin(input));
        }
        catch(Exception e){
            msgMessage.showMessageDialog(this, e.toString(), "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnDecToBinActionPerformed

    private void btnBinToDecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBinToDecActionPerformed
        clear();
        
        try{
            input = txtInput.getText();
            txtOutput.setText(c.binToDec(input));
        }
        catch(Exception e){
            msgMessage.showMessageDialog(this, e.toString(), "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnBinToDecActionPerformed

    private void btnBinToHexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBinToHexActionPerformed
        clear();
        
        try{
            input = txtInput.getText();
            txtOutput.setText(c.binToHex(input));
        }
        catch(Exception e){
            msgMessage.showMessageDialog(this, e.toString(), "ERROR", JOptionPane.ERROR_MESSAGE);
        }
     
    }//GEN-LAST:event_btnBinToHexActionPerformed

    private void btnHexToBinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHexToBinActionPerformed
        clear();
        
        try{
            input = txtInput.getText();
            txtOutput.setText(c.hexToBin(input));
            }
        catch(Exception e){
            msgMessage.showMessageDialog(this, e.toString(), "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnHexToBinActionPerformed

    private void btnAsciiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAsciiActionPerformed
        clear();
        
        try{
             str = txtInput.getText();
             txtOutput.setText(c.ascii(str));
             }
        catch(Exception e){
            msgMessage.showMessageDialog(this, e.toString(), "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnAsciiActionPerformed

    private void btnBinaryToLettersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBinaryToLettersActionPerformed
        clear();
        
        try{
            str = txtInput.getText();
            str2 = c.binToDec(str);
            txtOutput.setText(c.decimalToLettersShort(str2));
        }
        catch(Exception e){
            msgMessage.showMessageDialog(this, e.toString(), "error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnBinaryToLettersActionPerformed

    private void btnLettersToDecimalsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLettersToDecimalsActionPerformed
        clear();
        
        try{
            str = txtInput.getText().toLowerCase();
            txtOutput.setText(c.lettersToDecimal(str));            // worked successfully
        }
        catch(Exception e){
            msgMessage.showMessageDialog(this, e.toString(), "error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnLettersToDecimalsActionPerformed

    private void btnDecToLettersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDecToLettersActionPerformed
        clear();
        
        try{
            str = txtInput.getText();
            txtOutput.setText(c.decimalToLettersShort(str));
        }
        catch(Exception e){
            msgMessage.showMessageDialog(this, e.toString(), "error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnDecToLettersActionPerformed

    private void btnHexToLettersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHexToLettersActionPerformed
        clear();
        
        try{
            str = txtInput.getText().toUpperCase();
            str2 = c.hexToDec(str);
            txtOutput.setText(c.decimalToLettersShort(str2));
            
        }
        catch(Exception e){
            msgMessage.showMessageDialog(this, e.toString(), "error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnHexToLettersActionPerformed

    private void btnLettersToBinaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLettersToBinaryActionPerformed
        clear();
        
        try{
            str = txtInput.getText();
            str2 = c.lettersToDecimal(str);
            txtOutput.setText(c.decToBin(str2));
        }
        catch(Exception e){
            msgMessage.showMessageDialog(this, e.toString(), "error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnLettersToBinaryActionPerformed

    private void btnLettersToHexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLettersToHexActionPerformed
        clear();
        
        try{
            str = txtInput.getText();
            str2 = c.lettersToDecimal(str);
            txtOutput.setText(c.decToHex(str2));
            
        }
        catch(Exception e){
            msgMessage.showMessageDialog(this, e.toString(), "error", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_btnLettersToHexActionPerformed

    private void btnRotateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRotateActionPerformed
        int rotateNum = 0;                                                      // this variable is for a number in the rotation num txtbox

        if(!(txtRotation.getText().isEmpty())){                                 // if the rotationnum txtbox isn't empty
            try{
                rotateNum = Integer.parseInt(txtRotation.getText());
                txtFinalOutput.setText(ceasar.rotateSingle(rotateNum, txtOutput.getText()));     // use the method to take the rotation num and the string then shift string set number
            }
            catch(Exception e){
                msgMessage.showMessageDialog(this, e.toString(), "Exception!", JOptionPane.ERROR_MESSAGE);
            }
        }
        else if(!(txtWord.getText().isEmpty())){
            try{
                String wordInput = txtWord.getText();
                String textInput = txtOutput.getText();
                txtFinalOutput.setText(ceasar.rotateWord(wordInput, textInput));          // works completely w/ spaces
            }
            catch(Exception e){
                msgMessage.showMessageDialog(this, "txtWord" + e.toString(), "Exception!", JOptionPane.ERROR_MESSAGE);
            }
        }
        else{
            msgMessage.showMessageDialog(this, "no rotation pattern given", "Error", JOptionPane.INFORMATION_MESSAGE);
        }

    }//GEN-LAST:event_btnRotateActionPerformed

    private void btnAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAllActionPerformed
        for(int i = 0; i < 26; i++){
            txtFinalOutput.setText(txtFinalOutput.getText() + (i + ".  " + (ceasar.rotateSingle(i, txtOutput.getText()))) + "\n\n");
        }
    }//GEN-LAST:event_btnAllActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        txtInput.setText("");
        txtFinalOutput.setText("");
        txtOutput.setText("");
        txtRotation.setText("");
        txtWord.setText("");
        txtCount.setText("");
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnReverseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReverseActionPerformed
        String word = "";
        String reversedWord = "";

        if(!(txtWord.getText().isEmpty())){
            try{
                word = txtWord.getText();
                txtWord.setText(ceasar.reverseWord(word));           // set the rotate word textbox to now contain the opposite of word
            }
            catch(Exception e){
                msgMessage.showMessageDialog(this, e.toString(), "error", JOptionPane.ERROR_MESSAGE);
            }
        }

    }//GEN-LAST:event_btnReverseActionPerformed

    private void txtOutputToInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtOutputToInputActionPerformed
        
        try{
            txtInput.setText(txtOutput.getText());
            txtOutput.setText("");
            txtFinalOutput.setText("");
        }
        catch(Exception e){
            msgMessage.showMessageDialog(this, e.toString(), "error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_txtOutputToInputActionPerformed

    private void txtInputToOutputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtInputToOutputActionPerformed
        try{
            txtOutput.setText(txtInput.getText());
            txtInput.setText("");
            txtFinalOutput.setText("");
        }
        catch(Exception e){
            msgMessage.showMessageDialog(this, e.toString(), "error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_txtInputToOutputActionPerformed

    private void txtInputToFinalOutputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtInputToFinalOutputActionPerformed
        try{
            txtFinalOutput.setText(txtInput.getText());
            txtInput.setText("");
            txtOutput.setText("");
        }
        catch(Exception e){
            msgMessage.showMessageDialog(this, e.toString(), "error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_txtInputToFinalOutputActionPerformed

    private void txtOutputToFinalOutputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtOutputToFinalOutputActionPerformed
        try{
            txtFinalOutput.setText(txtOutput.getText());
            txtOutput.setText("");
            txtInput.setText("");
        }
        catch(Exception e){
            msgMessage.showMessageDialog(this, e.toString(), "error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_txtOutputToFinalOutputActionPerformed

    private void txtFinalOutputToOutputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFinalOutputToOutputActionPerformed
        try{
            txtOutput.setText(txtFinalOutput.getText());
            txtFinalOutput.setText("");
            txtInput.setText("");
        }
        catch(Exception e){
            msgMessage.showMessageDialog(this, e.toString(), "error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_txtFinalOutputToOutputActionPerformed

    private void txtFinalOutputToInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFinalOutputToInputActionPerformed
        try{
            txtInput.setText(txtFinalOutput.getText());
            txtFinalOutput.setText("");
            txtOutput.setText("");
        }
        catch(Exception e){
            msgMessage.showMessageDialog(this, e.toString(), "error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_txtFinalOutputToInputActionPerformed

    private void btnScrambleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnScrambleActionPerformed
        try{
            for(int i = 0; i < 30; i++){
                txtFinalOutput.setText(txtFinalOutput.getText() + "\r\n\r\n" + "\t" + ceasar.scramble(txtOutput.getText()));
            }
        } catch(
            Exception e){
            msgMessage.showMessageDialog(this, e.toString(), "error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnScrambleActionPerformed

    private void btnDictionaryCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDictionaryCheckActionPerformed
        try{
            txtFinalOutput.setText(ceasar.checkDictionary(txtOutput.getText()));
        } catch(Exception e){
            msgMessage.showMessageDialog(this, e.toString(), "error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnDictionaryCheckActionPerformed

    private void btnClear3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClear3ActionPerformed
        txtFinalOutput.setText("");
    }//GEN-LAST:event_btnClear3ActionPerformed

    private void btnClear2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClear2ActionPerformed
        txtOutput.setText("");
    }//GEN-LAST:event_btnClear2ActionPerformed

    private void btnClear1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClear1ActionPerformed
        txtInput.setText("");
    }//GEN-LAST:event_btnClear1ActionPerformed

    private void btnCountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCountActionPerformed
        try{
            if(!(txtInput.getText().isEmpty() & txtOutput.getText().isEmpty() & txtFinalOutput.getText().isEmpty())){
                txtCount.setText("1. " + ceasar.count(txtInput.getText()) + "\r\n" + "2. " + ceasar.count(txtOutput.getText()) + "\r\n" + "3. " + ceasar.count(txtFinalOutput.getText()));
            }
            else{
                msgMessage.showMessageDialog(this, "No data in txtboxes", "error", JOptionPane.ERROR_MESSAGE);          // else function so 
            }
        } catch(Exception e){
            msgMessage.showMessageDialog(this, e.toString(), "error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnCountActionPerformed

    private void btnConvertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConvertActionPerformed
        if (rbDecimal.isSelected() && rbDecimalTwo.isSelected()){
            txtInput.setText("worked");
        }
        //else if()
    }//GEN-LAST:event_btnConvertActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConversionFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConversionFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConversionFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConversionFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ConversionFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFileChooser FileChooser;
    private javax.swing.JMenuBar Menu;
    private javax.swing.JButton btnAll;
    private javax.swing.JButton btnAscii;
    private javax.swing.JButton btnBinToDec;
    private javax.swing.JButton btnBinToHex;
    private javax.swing.JButton btnBinaryToLetters;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnClear1;
    private javax.swing.JButton btnClear2;
    private javax.swing.JButton btnClear3;
    private javax.swing.JButton btnConvert;
    private javax.swing.JButton btnCount;
    private javax.swing.JButton btnDecToBin;
    private javax.swing.JButton btnDecToHex;
    private javax.swing.JButton btnDecToLetters;
    private javax.swing.JButton btnDictionaryCheck;
    private javax.swing.ButtonGroup btnGroup1;
    private javax.swing.JButton btnHexToBin;
    private javax.swing.JButton btnHexToDec;
    private javax.swing.JButton btnHexToLetters;
    private javax.swing.JButton btnLettersToBinary;
    private javax.swing.JButton btnLettersToDecimals;
    private javax.swing.JButton btnLettersToHex;
    private javax.swing.JButton btnReverse;
    private javax.swing.JButton btnRotate;
    private javax.swing.JButton btnScramble;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JMenu mnuFile;
    private javax.swing.JMenuItem mnuOpen;
    private javax.swing.JMenu mnuShifts;
    private javax.swing.JOptionPane msgMessage;
    private javax.swing.JRadioButton rbDecimal;
    private javax.swing.JRadioButton rbDecimalTwo;
    private javax.swing.JRadioButton rbHex;
    private javax.swing.JTextArea txtCount;
    private javax.swing.JTextArea txtFinalOutput;
    private javax.swing.JButton txtFinalOutputToInput;
    private javax.swing.JButton txtFinalOutputToOutput;
    private javax.swing.JTextArea txtInput;
    private javax.swing.JButton txtInputToFinalOutput;
    private javax.swing.JButton txtInputToOutput;
    private javax.swing.JTextArea txtOutput;
    private javax.swing.JButton txtOutputToFinalOutput;
    private javax.swing.JButton txtOutputToInput;
    private javax.swing.JTextField txtRotation;
    private javax.swing.JTextField txtWord;
    // End of variables declaration//GEN-END:variables
}
